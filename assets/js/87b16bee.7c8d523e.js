"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5270],{6863:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var a=n(5893),o=n(1151);const i={sidebar_position:1,title:"DHCP starvation"},s="DHCP starvation(aka DHCPGlutton)",r={id:"network_attacks/dhcp_starvation",title:"DHCP starvation",description:"DHCP starvation is a network attack that aim to finish ip in the DHCP pool by sending fake DHCP discover in the network.",source:"@site/docs/network_attacks/dhcp_starvation.md",sourceDirName:"network_attacks",slug:"/network_attacks/dhcp_starvation",permalink:"/docs/network_attacks/dhcp_starvation",draft:!1,unlisted:!1,editUrl:"https://github.com/CapibaraZero/docs/tree/main/docs/network_attacks/dhcp_starvation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"DHCP starvation"},sidebar:"tutorialSidebar",previous:{title:"The network attacks",permalink:"/docs/category/the-network-attacks"},next:{title:"EvilPortal",permalink:"/docs/network_attacks/evilportal"}},c={},l=[{value:"How to use it?",id:"how-to-use-it",level:2},{value:"Current limitation",id:"current-limitation",level:3},{value:"GUI screenshot",id:"gui-screenshot",level:3}];function d(t){const e={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,o.a)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"dhcp-starvationaka-dhcpglutton",children:"DHCP starvation(aka DHCPGlutton)"}),"\n",(0,a.jsx)(e.p,{children:"DHCP starvation is a network attack that aim to finish ip in the DHCP pool by sending fake DHCP discover in the network."}),"\n",(0,a.jsx)(e.p,{children:"Now since ESP32/8266 have only WiFi interface we can't spoof packet MAC address otherwise would be dropped by the AP, so we need to rethink the attack to adapt it to a WiFI only device."}),"\n",(0,a.jsx)(e.p,{children:"About this, CapibaraZero includes a DHCP starvation attack called DHCPGlutton that spoof WiFi interface MAC address with a randomly generated one and then connected to the AP. This operation is being done until DHCP pool end."}),"\n",(0,a.jsx)(e.p,{children:"Clearly this operation is a bit slower than sending spoofed packet through ethernet but it can still terminate a DHCP pool. It's important to underline that although ESP disconnect, the IP remain allocated until the finish of the lease time, so it's important to attack network with a DHCP lease time long(at least 1 hour)"}),"\n",(0,a.jsx)(e.h2,{id:"how-to-use-it",children:"How to use it?"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Create config.json file like ",(0,a.jsx)(e.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(4855).Z+"",children:"this"})," under /dhcp_glutton/ folder in the SD card. This file will contains SSID and password of AP that you want to attack."]}),"\n",(0,a.jsx)(e.li,{children:"Select NetAt.(Network attacks)"}),"\n",(0,a.jsx)(e.li,{children:"Now select DHCPGlutton"}),"\n",(0,a.jsx)(e.li,{children:"Start the attack and wait until DHCP pool end. You can stop attack when you want."}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"It can takes up to 15 minutes for a /24 network. More clients are connected, Less time CapibaraZero needs to finish DHCP pool.\nSmaller are the subnet, less time CapibaraZero needs to finish DHCP pool."}),"\n",(0,a.jsx)(e.h3,{id:"current-limitation",children:"Current limitation"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Attack is slow"}),"\n",(0,a.jsx)(e.li,{children:"RNG sometimes doesn't randomize MAC address(this slow down the attack)"}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"gui-screenshot",children:"GUI screenshot"}),"\n",(0,a.jsx)("img",{src:"/img/screens/network_attacks/dhcp_glutton.png",alt:"DHCPGlutton screnshot"})]})}function h(t={}){const{wrapper:e}={...(0,o.a)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(d,{...t})}):d(t)}},4855:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/files/config-926c76533e1c62b969525013387c0862.json"},1151:(t,e,n)=>{n.d(e,{Z:()=>r,a:()=>s});var a=n(7294);const o={},i=a.createContext(o);function s(t){const e=a.useContext(i);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:s(t.components),a.createElement(i.Provider,{value:e},t.children)}}}]);